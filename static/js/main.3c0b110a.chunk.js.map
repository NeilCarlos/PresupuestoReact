{"version":3,"sources":["components/Header.js","components/Formulario.js","components/Gasto.js","components/Presupuesto.js","components/Resto.js","components/ListaGastos.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","Component","Formulario","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","enviarGasto","e","preventDefault","descripcionRef","current","value","montoRef","fechaRef","console","log","objGasto","uuid","descripcion","monto","fecha","currentTarget","reset","agregarGasto","setState","error","React","createRef","state","onSubmit","httpfor","readOnly","defaultValue","ref","Gasto","gasto","Presupuesto","presupuesto","Resto","getAlertcolor","_this$props","resto","ListaGastos","gastos","Fragment","Presupuesto_Presupuesto","Resto_Resto","map","Gasto_Gasto","key","App","_this$state","push","Header_Header","Formulario_Formulario","ListaGastos_ListaGastos","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c0b110a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">About</a>\n      </li>\n    </ul>\n    <form className=\"form-inline my-2 my-lg-0\">\n      <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\"/>\n      <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n  </div>\n</nav>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport default class Formulario extends Component {\n\n    descripcionRef;\n    montoRef;\n    fechaRef;\n\n    constructor(props) {\n        super(props);\n        this.descripcionRef = React.createRef();\n        this.montoRef = React.createRef();\n        this.fechaRef = React.createRef();\n        this.state ={\n            error:false\n        }\n\n\n    }\n\n    enviarGasto = (e) => {\n        e.preventDefault();\n\n        if(this.descripcionRef.current.value == \"\"|| \n            this.montoRef.current.value ==\"\"||\n            this.fechaRef.current.value ==\"\"){\n                this.setState({\n                    error:true\n                });\n                return;\n            }\n\n            \n        console.log('submit del ...');\n        let objGasto = {\n            id: uuid(),\n            descripcion: this.descripcionRef.current.value,\n            monto: this.montoRef.current.value,\n            fecha: this.fechaRef.current.value\n        }\n        console.log(objGasto);\n\n        e.currentTarget.reset();\n        this.props.agregarGasto(objGasto);\n        this.setState({\n            error:false\n\n        })\n        \n\n    }\n\n    // onSubmit={this.enviarGasto}\n    render() {\n        return (\n            <form onSubmit={this.enviarGasto}>\n                <fieldset>\n                    <legend>Gastos y Presupuestos</legend>\n                    <div className=\"form-group row\">\n                        <label httpfor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"text\" readOnly=\"\" className=\"form-control-plaintext\" id=\"staticEmail\" defaultValue=\"email@example.com\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label httpfor=\"exampleInputEmail1\">Descripcion del Gasto</label>\n                        <input type=\"text\" \n                                className=\"form-control\" \n                                id=\"exampleInputEmail1\" \n                               \n                                placeholder=\"Ejm: Comida\" \n                                ref={this.descripcionRef}/>\n                        \n                    </div>\n                    <div className=\"form-group\">\n                        <label httpfor=\"exampleInputPassword1\">Monto del Gasto</label>\n                        <input type=\"number\" \n                                className=\"form-control\" \n                                id=\"exampleInputPassword1\" \n                                placeholder=\"Ejm: 100.00 ./S\"\n                                ref={this.montoRef} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label httpfor=\"exampleInputPassword1\">Fecha de Gasto</label>\n                        <input type=\"date\" \n                                className=\"form-control\" \n                                id=\"exampleInputPassword1\" \n                                placeholder=\"Fecha\"\n                                ref={this.fechaRef} />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Crear Gasto</button>\n\n                    \n\n\n                </fieldset>\n                {\n                    this.state.error ?\n                    <div className=\"alert alert-danger mt-5 text-center\">df</div>:null\n\n                }\n\n                \n\n            </form>\n\n\n\n\n\n\n\n\n\n         )\n    }\n}\n\nFormulario.propTypes = {\n    agregarGasto: PropTypes.func.isRequired\n}\n","import React, { Component } from 'react'\n\nexport default class Gasto extends Component {\n    render() {\n        return (\n\n            <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">{this.props.gasto.descripcion}</h5>\n                    <small>{this.props.gasto.fecha}</small>\n                </div>\n                <p className=\"mb-1\">{this.props.gasto.monto}</p>\n                <small>{this.props.gasto.id}</small>\n            </a>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class Presupuesto extends Component {\n    render() {\n        return (\n            // <div>\n            //     Presupuesto.\n            // </div>\n            <div className=\"alert alert-primary\">\n               \n                Tu presupuesto<strong>./S{this.props.presupuesto}</strong> \n            </div>\n        )\n    }\n}\n\nPresupuesto.propTypes ={\n    presupuesto: PropTypes.number.isRequired\n}\n","import React, { Component } from 'react'\n\nexport default class Resto extends Component {\n\n    getAlertcolor=()=>{\n        const {presupuesto,resto} = this.props;\n        if(resto>= presupuesto/2){\n            return \"alert alert-success\"\n        }else if(resto>= presupuesto/4){\n            return \"alert alert-warning\"\n\n        }else{\n            return \"alert alert-danger\"\n        }\n    }\n    // \"alert alert-success\"\n    render() {\n        return (\n            <div className={this.getAlertcolor()}>\n            \n           Te quedan <strong>S/.{this.props.resto}</strong> \n          </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Gasto from './Gasto';\nimport Presupuesto from './Presupuesto';\nimport Resto from './Resto';\n\nexport default class ListaGastos extends Component {\n\n    // renderizarGastos=()=>{\n    //     let vistas = [];\n    //     this.props.gastos.forEach(gasto => {\n    //         vistas.push(<Gasto key = {gasto.id} gasto={gasto}/>)\n    //     });\n    //     return vistas\n    // }\n    // //Esto va en el Div\n    // {this.renderizarGastos}\n\n\n    render() {\n        let { gastos } = this.props;\n        console.log(gastos);\n        // className=\"list-group\"\n        return (\n\n            <React.Fragment>\n                <h4>Lista de Gastos</h4>\n                    <hr />\n                {/* Presupuesto */}\n                <Presupuesto presupuesto={this.props.presupuesto}/>\n               \n\n                {/* Lo que queda */}\n                <Resto resto={this.props.resto}\n                            presupuesto={this.props.presupuesto}/>\n\n                <div className=\"list-group mt-2\">\n                    \n                    {gastos.map(gasto=><Gasto key={gasto.id} gasto={gasto}/>)}\n                    {/* <Gasto /> */}\n\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport ListaGastos from './components/ListaGastos';\n\nexport default class App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      gastos: [],\n      presupuesto: 1000,\n      resto:1000,\n    }\n  }\n\nagregarGasto = (objGasto)=>{\n  console.log(objGasto);\n  let {gastos,resto} = this.state;\n  gastos.push(objGasto);\n\n  resto = resto - objGasto.monto;\n\n  this.setState({\n    gastos:gastos,\n    resto:resto\n  });\n  \n}\n\n  render() {\n    return (\n      <React.Fragment>\n\n        <Header></Header>\n        <div className=\"container vmt-5\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              columna1\n              <Formulario agregarGasto={this.agregarGasto}/>\n              </div>\n            <div className=\"col-md-6\">\n              columna1\n              <ListaGastos gastos={this.state.gastos}\n                            presupuesto={this.state.presupuesto}\n                            resto={this.state.resto}/>\n              </div>\n          </div>\n        </div>\n\n      </React.Fragment>\n\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}